# Quaero Configuration
# ====================
#
# This file contains ONLY user-facing configuration settings.
# Technical parameters (cache sizes, timeouts, dimensions, etc.) have sensible
# defaults hardcoded in the application and should not be modified unless you
# are debugging or have specific requirements.
#
# Configuration Load Order (priority from lowest to highest):
#   1. Defaults (hardcoded in application)
#   2. TOML file (this file)
#   3. Environment variables (QUAERO_*)
#   4. Command line flags (--port, --host, --config)
#
# Only uncomment settings you want to override from defaults.

# =============================================================================
# Server Configuration
# =============================================================================
# Defaults: port=8080, host="localhost"
# CLI flags: --port, --host (highest priority)
# Env vars: QUAERO_SERVER_PORT, QUAERO_SERVER_HOST

[server]
# port = 8080         # Default: 8080
# host = "localhost"  # Default: localhost

# =============================================================================
# Data Sources Configuration
# =============================================================================
# Configure which sources to scrape and what projects/spaces to include.
# These are user-specific and should be uncommented and customized.

[sources.confluence]
enabled = true
spaces = ["TEAM", "DOCS"]  # Customize: Your Confluence spaces

[sources.jira]
enabled = true
projects = ["DATA", "ENG"]  # Customize: Your Jira projects

[sources.github]
enabled = true
token = "${GITHUB_TOKEN}"  # Use environment variable for security
repos = ["your-org/repo1"] # Customize: Your GitHub repositories

# =============================================================================
# Storage Configuration
# =============================================================================
# Defaults: path="./data/quaero.db"
# Env vars: QUAERO_SQLITE_PATH

[storage.sqlite]
# path = "./data/quaero.db"  # Default: ./data/quaero.db

[storage.filesystem]
# images = "./data/images"           # Default: ./data/images
# attachments = "./data/attachments" # Default: ./data/attachments

# =============================================================================
# LLM Configuration
# =============================================================================
# Two modes available: "offline" (local, no network) or "cloud" (API-based)
# Default: offline (secure by default)
# Env var: QUAERO_LLM_MODE

[llm]
mode = "offline"  # "offline" or "cloud"

# Offline Mode - Local models via llama-cli (100% local, no network calls)
[llm.offline]
model_dir = "./models"                          # Directory containing GGUF model files
embed_model = "nomic-embed-text-v1.5-q8.gguf"  # Embedding model (~150MB)
chat_model = "qwen2.5-7b-instruct-q4.gguf"     # Chat model (~4.5GB)

# Cloud Mode - API providers (sends data to external APIs)
# WARNING: Only use cloud mode if you understand the security implications
# [llm.cloud]
# provider = "gemini"                  # "gemini", "openai", "anthropic"
# api_key = "${QUAERO_LLM_CLOUD_API_KEY}"  # Use environment variable
# embed_model = "text-embedding-004"   # Cloud embedding model
# chat_model = "gemini-1.5-flash"      # Cloud chat model

# Audit Logging - Compliance and security
[llm.audit]
enabled = true      # Enable audit logging to SQLite
log_queries = false # Don't log query text (PII protection)
